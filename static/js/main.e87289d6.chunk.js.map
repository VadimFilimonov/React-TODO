{"version":3,"sources":["components/Task.jsx","components/TaskAdd.jsx","App.jsx","index.jsx"],"names":["Task","task","toggleTask","deleteTask","ListItem","button","onClick","ListItemIcon","done","CheckBoxOutlined","CheckBoxOutlineBlankOutlined","ListItemText","primary","title","style","textDecoration","ListItemSecondaryAction","IconButton","edge","aria-label","Delete","TaskAdd","props","useState","input","setInput","display","onSubmit","event","preventDefault","addTask","TextField","flexGrow","variant","label","onChange","target","value","Button","color","type","startIcon","disabled","length","App","tasks","setTasks","Container","maxWidth","Typography","component","newsTasks","id","nextId","List","map","newTasks","newTask","filter","render","StrictMode","document","getElementById"],"mappings":"4RAgCeA,EAjBF,SAAC,GAAD,IAAEC,EAAF,EAAEA,KAAMC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,WAApB,OACX,eAACC,EAAA,EAAD,CAAUC,QAAM,EAACC,QAASJ,EAA1B,UACE,cAACK,EAAA,EAAD,UACGN,EAAKO,KAAO,cAACC,EAAA,EAAD,IAAuB,cAACC,EAAA,EAAD,MAEtC,cAACC,EAAA,EAAD,CACEC,QAASX,EAAKY,MACdC,MAAO,CAACC,eAAgBd,EAAKO,KAAO,eAAiB,UAEvD,cAACQ,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAYC,KAAK,MAAMC,aAAW,SAASb,QAASH,EAApD,SACE,cAACiB,EAAA,EAAD,Y,mCCaOC,EAjCC,SAACC,GAAW,IAAD,EACCC,mBAAS,IADV,mBAClBC,EADkB,KACXC,EADW,KAWzB,OACE,uBAAMX,MAAO,CAACY,QAAS,QAASC,SATb,SAACC,GACpBA,EAAMC,iBACFL,IACFF,EAAMQ,QAAQN,GACdC,EAAS,MAKX,UACE,cAACM,EAAA,EAAD,CACEjB,MAAO,CAACkB,SAAU,GAClBC,QAAQ,WACRC,MAAM,yBACNC,SAAU,SAACP,GAAD,OAAWH,EAASG,EAAMQ,OAAOC,QAC3CA,MAAOb,IAET,cAACc,EAAA,EAAD,CACEL,QAAQ,YACRM,MAAM,UACNC,KAAK,SACLC,UAAW,cAAC,IAAD,IACXC,SAA2B,IAAjBlB,EAAMmB,OALlB,qBCgCSC,EAjDH,WAAO,IAAD,EACUrB,mBAAS,IADnB,mBACTsB,EADS,KACFC,EADE,KA6BhB,OACE,eAACC,EAAA,EAAD,CAAWC,SAAS,KAApB,UACE,cAACC,EAAA,EAAD,CAAYhB,QAAQ,KAAKiB,UAAU,KAAnC,mBAGA,cAAC,EAAD,CAASpB,QA/BG,SAACjB,GACf,IAKMsC,EAAS,CALC,CACdC,GAAIC,MACJxC,QACAL,MAAM,IAEO,mBAAgBqC,IAC/BC,EAASK,MAyBP,cAACG,EAAA,EAAD,UACGT,EAAMU,KAAI,SAACtD,GAAD,OACT,cAAC,EAAD,CACEC,WAAY,kBAzBH,SAACkD,GAClB,IAAMI,EAAWX,EAAMU,KAAI,SAACtD,GAC1B,IAAMwD,EAAUxD,EAIhB,OAHIA,EAAKmD,KAAOA,IACdK,EAAQjD,MAAQP,EAAKO,MAEhBiD,KAETX,EAASU,GAiBiBtD,CAAWD,EAAKmD,KAClCjD,WAAY,kBAfH,SAACiD,GAClB,IAAMI,EAAWX,EAAMa,QAAO,SAACzD,GAAD,OAAUA,EAAKmD,KAAOA,KACpDN,EAASU,GAaiBrD,CAAWF,EAAKmD,KAClCnD,KAAMA,GACDA,EAAKmD,aC7CtBO,iBACE,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e87289d6.chunk.js","sourcesContent":["// @ts-check\nimport React from 'react';\nimport {\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  ListItemSecondaryAction,\n  IconButton,\n} from '@material-ui/core';\nimport {\n  CheckBoxOutlineBlankOutlined,\n  CheckBoxOutlined,\n  Delete,\n} from '@material-ui/icons';\n\nconst Task = ({task, toggleTask, deleteTask}) => (\n  <ListItem button onClick={toggleTask}>\n    <ListItemIcon>\n      {task.done ? <CheckBoxOutlined /> : <CheckBoxOutlineBlankOutlined />}\n    </ListItemIcon>\n    <ListItemText\n      primary={task.title}\n      style={{textDecoration: task.done ? 'line-through' : 'none'}}\n    />\n    <ListItemSecondaryAction>\n      <IconButton edge=\"end\" aria-label=\"delete\" onClick={deleteTask}>\n        <Delete />\n      </IconButton>\n    </ListItemSecondaryAction>\n  </ListItem>\n);\n\nexport default Task;\n","// @ts-check\nimport React, {useState} from 'react';\nimport Button from '@material-ui/core/Button';\nimport SaveIcon from '@material-ui/icons/Save';\nimport TextField from '@material-ui/core/TextField';\n\nconst TaskAdd = (props) => {\n  const [input, setInput] = useState('');\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (input) {\n      props.addTask(input);\n      setInput('');\n    }\n  };\n\n  return (\n    <form style={{display: 'flex'}} onSubmit={handleSubmit}>\n      <TextField\n        style={{flexGrow: 1}}\n        variant=\"outlined\"\n        label=\"What needs to be done?\"\n        onChange={(event) => setInput(event.target.value)}\n        value={input}\n      />\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        type=\"submit\"\n        startIcon={<SaveIcon />}\n        disabled={input.length === 0}\n      >\n        Add\n      </Button>\n    </form>\n  );\n};\n\nexport default TaskAdd;\n","// @ts-check\nimport React, {useState} from 'react';\nimport nextId from 'react-id-generator';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport Task from './components/Task';\nimport TaskAdd from './components/TaskAdd';\n\nconst App = () => {\n  const [tasks, setTasks] = useState([]);\n\n  const addTask = (title) => {\n    const newTask = {\n      id: nextId(),\n      title,\n      done: false,\n    };\n    const newsTasks = [newTask, ...tasks];\n    setTasks(newsTasks);\n  };\n\n  const toggleTask = (id) => {\n    const newTasks = tasks.map((task) => {\n      const newTask = task;\n      if (task.id === id) {\n        newTask.done = !task.done;\n      }\n      return newTask;\n    });\n    setTasks(newTasks);\n  };\n\n  const deleteTask = (id) => {\n    const newTasks = tasks.filter((task) => task.id !== id);\n    setTasks(newTasks);\n  };\n\n  return (\n    <Container maxWidth=\"sm\">\n      <Typography variant=\"h1\" component=\"h1\">\n        todos\n      </Typography>\n      <TaskAdd addTask={addTask} />\n      <List>\n        {tasks.map((task) => (\n          <Task\n            toggleTask={() => toggleTask(task.id)}\n            deleteTask={() => deleteTask(task.id)}\n            task={task}\n            key={task.id}\n          />\n        ))}\n      </List>\n    </Container>\n  );\n};\n\nexport default App;\n","// @ts-check\nimport React from 'react';\nimport {render} from 'react-dom';\nimport App from './App';\n\nrender(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}